{
  "id": "496615",
  "name": "Java Forum Stuttgart 2016",
  "url": "http://localhost:8080{server.contextPath}",
  "metaData": {
    "audiences": [
      {
        "id": "1",
        "order": 1,
        "names": {
          "de": "Anfänger",
          "en": "beginner"
        },
        "icon": "audience_1.png"
      },
      {
        "id": "2",
        "order": 2,
        "names": {
          "de": "Fortgeschrittene",
          "en": "advanced"
        },
        "icon": "audience_2.png"
      }
    ],
    "eventTypes": [],
    "languages": [
      {
        "id": "de",
        "order": 1,
        "names": {
          "de": "Deutsch",
          "en": "German"
        },
        "icon": "language_de.png"
      },
      {
        "id": "en",
        "order": 2,
        "names": {
          "de": "Englisch",
          "en": "English"
        },
        "icon": "language_en.png"
      }
    ],
    "defaultLanguage": {
      "id": "de",
      "order": 1,
      "names": {
        "de": "Deutsch",
        "en": "German"
      },
      "icon": "language_de.png"
    },
    "tracks": [
      {
        "id": "1",
        "order": 1,
        "names": {
          "de": "Architektur",
          "en": "architecture"
        },
        "icon": "track_1.png"
      },
      {
        "id": "2",
        "order": 2,
        "names": {
          "de": "IDE Eclipse + Tools",
          "en": "IDE Eclipse + Tools"
        },
        "icon": "track_2.png"
      },
      {
        "id": "3",
        "order": 4,
        "names": {
          "de": "Security",
          "en": "security"
        },
        "icon": "track_4.png"
      },
      {
        "id": "4",
        "order": 5,
        "names": {
          "de": "Business Process",
          "en": "business process"
        },
        "icon": "track_5.png"
      },
      {
        "id": "5",
        "order": 6,
        "names": {
          "de": "Enterprise Java",
          "en": "Enterprise Java"
        },
        "icon": "track_6.png"
      },
      {
        "id": "6",
        "order": 7,
        "names": {
          "de": "Core Java",
          "en": "Core Java"
        },
        "icon": "track_7.png"
      },
      {
        "id": "7",
        "order": 8,
        "names": {
          "de": "IoT / Embedded",
          "en": "IoT / Embedded"
        },
        "icon": "track_8.png"
      },
      {
        "id": "8",
        "order": 9,
        "names": {
          "de": "Clients",
          "en": "clients"
        },
        "icon": "track_9.png"
      }
    ],
    "locations": [],
    "defaultIcon": "Unknown.png",
    "conferenceId": "496615"
  },
  "events": [
    {
      "id": "497115",
      "start": "2016-07-07T16:40:00",
      "end": "2016-07-07T17:25:00",
      "title": "[B7] Skalieren mit Spring Boot und Docker",
      "abstractText": "Kann man mit einem Kommando von einem auf hundert Services skalieren? Nie? Doch man kann. Spring Cloud und Docker machen es möglich. Der Vortrag zeigt, wie schnell man Microservice Anwendung mit Spring Boot bauen kann. Hier wird auch die Verwendung eines Client seitigen Loadbalancers in Verbindung mit einer Service Registry gezeigt. Im zweiten Schritt werden die Services in Docker Images verpackt. Danach wird der Microservice \"Schwarm\" über Docker Compose gestartet - und dann wird skaliert... Nicht von einem auf hundert Instanzen, aber das ist nur dem begrenzten Ressourcen meines Notebooks geschuldet.",
      "demo": true,
      "trackId": "1",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497012",
      "start": "2016-07-07T09:50:00",
      "end": "2016-07-07T10:35:00",
      "title": "[A2] SQL meets NoSQL - Interaktive IoT-Datenanalyse trifft auf Open Source mit Apache NiFi, Solr und Zeppelin\r(sponsored talk)",
      "abstractText": "Durch das Internet of Things nimmt die Anzahl der Geräte, die Daten produzieren und somit natürlich auch die Datenmenge in den kommenden Jahren noch rasanter als bisher zu. Diese Daten sind wie Rohöl zu behandeln. Durch Aggregation, Kombination und Analyse können geschäftskritische Erkenntnisse aus ihnen gewonnen werden. Die schiere Menge an Daten und deren unterschiedliche Beschaffenheit setzen für ein solches Ziel eine Plattform voraus, die mit diesen Gegebenheiten zurechtkommt.\nDieser Vortrag stellt drei Open Source Komponenten vor, die zusammen eine solche Plattform ergeben. Apache NiFi sorgt für Verarbeitung und Verteilung der Daten, Apache Solr als skalierbarer Suchserver für das Speichern und Apache Zeppelin für die Analyse und Visualisierung. Anhand eines konkreten Use Cases, der Analyse und Visualisierung von Wetterdaten, wird ein kompletter Workflow vom Import der Daten bis hin zu deren Visualisierung vorgestellt.\nDie Wetterdaten werden von einem NiFi-Workflow importiert und in Solr indexiert. Eines der neuesten Solr-Features, SQL-Abfragen, die über verteilte Suchindexe abgesetzt werden können, ermöglicht die Analyse großer Datenmengen auf einfache und gleichzeitig schnelle Art und Weise. Die Unterstützung von SQL-Syntax sorgt zudem für eine niedrige Einstiegshürde in diese Technologie für alle, die SQL beherrschen. Zu guter Letzt sorgt Zeppelin mit dem grafischen Interface dafür, dass diese Daten interaktiv abgefragt, analysiert und visualisiert werden können. Mit diesen Komponenten wird anhand der Wetterdaten von Oberstdorf analysiert, ob sich eine fiktive Investition in den Wintersport eher rentiert als eine Investition in den Sommertourismus.",
      "demo": true,
      "trackId": "7",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497123",
      "start": "2016-07-07T12:15:00",
      "end": "2016-07-07T13:00:00",
      "title": "[C4] Monitoring Metrics 101 - Leveraging on the Power of JMX",
      "abstractText": "While JMX is one of the oldest components of Java (JSR-3), few know about its actual power. This talk gives a short introduction on the basics of monitoring in general, what JMX is and how both, tech and business can benefit from a proper implementation.\nAfter this talk, you will know, how to export JMX metrics in your own projects, which common frameworks and libraries also provide JMX metrics and which tools for JMX monitoring are available.\n\nThis talk contains content for Devs, Ops and Managers, as all of them can benefit from doing monitoring right.",
      "demo": true,
      "trackId": "5",
      "audienceId": "1",
      "speakerIds": [],
      "languageId": "de"
    },
    {
      "id": "497085",
      "start": "2016-07-07T11:10:00",
      "end": "2016-07-07T11:55:00",
      "title": "[A3] HomeKit, Weave oder Eclipse SmartHome? Best Practices für erfolgreiche Smart-Home-Projekte",
      "abstractText": "Noch immer hat sich keine der zahlreichen Smart-Home-Allianzen im Markt durchgesetzt. Diese Tatsache bremst viele Projekte aus oder führt mindestens zu großer Unsicherheit, auf welches Pferd zu setzen ist. Statt auf ¿die Großen¿ zu warten und sich ihren eigennützigen Regeln unterzuordnen, sollte lieber auf wirklich offene Smart-Home-Plattformen wie Eclipse SmartHome gesetzt werden. Dieser Talk berichtet über die Lessons Learned aus einigen unserer Smart-Home-Projekte mit Eclipse SmartHome. Er beleuchtet wichtige Konzepte, zeigt die richtigen Einstiegspunkte vom OSGi-Backend bis zum AngularJS-Frontend und gibt zahlreiche Tipps für das eigene kommerzielle Smart-Home-Projekt.",
      "demo": true,
      "trackId": "7",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497193",
      "start": "2016-07-07T12:15:00",
      "end": "2016-07-07T13:00:00",
      "title": "[F4] Tooling für die Testpyramide",
      "abstractText": "Die Konzepte des agilen Testens - also insbesondere eine umfassende Testautomatisierung - sind in den vergangenen Jahren im Markt angelangt. Zur Implementierung von automatisierten Tests im Rahmen agiler SE-Projekte eignet sich ein Vorgehen anhand der sogenannten Testpyramide. Hat man deren Aussagen verstanden und verinnerlicht, so stellt sich die Frage nach einer Umsetzungsstrategie im Projekt. Wie könnte der konkrete Umsetzungsansatz für die jeweilige Ebene der Testpyramide aussehen? \n\nWelches Test-Werkzeug eignet sich auf welcher Ebene der Testpyramide für welchen Einsatzzweck? Welche Alternativen existieren?\nDiese Fragestellungen können auf den unteren Ebenen der Pyramide durch den Einsatz von Unit-und Mock-Frameworks meist im Konsens beantwortet werden. Die gängigen Praxisrealisierungen auf den höheren Ebenen der Pyramide adressieren obige Fragestellungen - wenn überhaupt - durch Einsatz ein und desselben Werkzeugs für unterschiedliche Szenarien - getreu dem Motto: ¿Wenn man einen Hammer hat, sieht alles wie ein Nagel aus\". Hierbei entstehen unwartbare, instabile und komplexe Testsuiten, die dem Wunsch nach optimalem Feedback von Tests nur unzureichend gerecht werden.\n\nIm Rahmen jahrelanger Projekterfahrungen im agilen Umfeld ist ein Werkzeugkasten entstanden, der verschiedenste Lösungsansätze für die gängigsten Testszenerien auf den höheren Ebenen der Testpyramide beinhaltet. Diese Werkzeuge zur Implementierung der Konzepte der Testpyramide werden wir vorstellen und Empfehlungen zur Umsetzung aussprechen. Hierzu wollen wir u.a. Themen wie den Einsatz von Isolierungstechniken, das Testen von lose gekoppelten Komponenten (z.B. Microservices) mittels Kontrakten oder den Einsatz von Container-Technologien beleuchten.",
      "demo": true,
      "trackId": "5",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497107",
      "start": "2016-07-07T12:15:00",
      "end": "2016-07-07T13:00:00",
      "title": "[A4] Jumpstart IoT in Java with OSGi enRoute",
      "abstractText": "OSGi has the reputation to be complex and hard! It is somehow. BUT ... it is also\n- a robust and stable technology, which has evolved and matured over the years\n- deals with many challenges you are facing in distributed and modular systems\n- has an extremely improved tooling for Java and OSGi named bndtools\n\nTo relieve the pain in getting started and allow a simple start, the OSGi alliance has created enRoute.\nenRoute is an OSGi distribution. You can compare it with linux distributions. You have a common core technology (OSGi in this case) and a compilation of specific implementations inside. This allows you to focus on evaluating, learning and kick-starting your OSGi experience.\n\nThis talks shows you some of the capabilities of enRoute and bndtools to develop IoT applications on a Raspberry Pi.\nYou will learn how to setup your workbench for development of OSGi applications.\n\n- preparation of the hardware target - Raspberry Pi\n- develop an OSGi based application in Eclipse with bndtools\n- deploy and run the app on the Raspberry Pi\n- development, instant deployment and remote debugging from your IDE\n\nAfter the session you should be capable of using your RasPi for private IoT projects ;-)",
      "demo": true,
      "trackId": "7",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "de"
    },
    {
      "id": "497045",
      "start": "2016-07-07T09:50:00",
      "end": "2016-07-07T10:35:00",
      "title": "[B2] Code Reviews: Techniken und Tipps",
      "abstractText": "Wie kann man erreichen, dass Code den man vor einiger Zeit geschrieben hat für einen selbst und auch für andere lesbar und verständlich ist? Wie stellt man sicher, dass alle Entwickler eines Projektes qualitativ gleichwertigen Code schreiben? Wie kann man inhaltliche Fehler im Code finden bevor dieser beim Kunden im Einsatz ist?\n\nDieser Vortrag stellt die Praxis des Code Reviews zum Auffinden von Fehlern und zur Erhöhung der Qualität des Codes vor. Lesbarer und qualitativ hochwertiger Code ist für den langfristigen Erfolg eines Projektes unerlässlich, um Wartung und Erweiterungen möglich zu machen.\n\nEs werden zunächst Tools vorgestellt mit denen sich Code Reviews teilweise automatisieren lassen. In einem weiteren Teil geht es um Erfahrungen, Techniken und Tipps um Code Reviews manuell und/oder mit Toolunterstützung durchzuführen und den Entwicklern Feedback und Verbesserungsvorschläge zu geben.\n\nDabei stehen folgende Fragen im Vordergrund:\n- Wie fängt man einen Review an?\n- Wer ist für die Reviews zuständig?\n- Sollte man jedes Stück Code reviewen?\n- Wenn ich TDD mache, brauche ich noch Reviews?\n- Wie formuliert man Verbesserungsvorschläge und gibt diese an die Entwickler weiter?\n- Welche Tools können einen Code Review unterstützen?\n- Wie können alle im Team von einem Code Review profitieren?",
      "demo": false,
      "trackId": "1",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497127",
      "start": "2016-07-07T14:30:00",
      "end": "2016-07-07T15:15:00",
      "title": "[A5] Apache Kafka - Skalierbare Nachrichtenverarbeitung und mehr!",
      "abstractText": "Ereignisströme und deren Handhabung, sprich Integration in eine Gesamtarchitektur wird immer wichtiger. Ereignisse müssen rasch und sicher entgegengenommen, verteilt und analysiert werden, wobei es oft mehrere Konsumenten bzw. Systeme gibt, die sich für ein bestimmtes Ereignis interessieren. Wie aber können diese Ereignisse effizient empfangen und weitergeleitet werden? Hier kommt Apache Kafka ins Spiel, ein verteiltes, hoch-skalierbares Messaging-System, welches eine grosse Menge von Informationen zwischen einer Quelle und einem Empfänger effizient und sicher austauschen kann.\nDieser Vortrag startet mit einer Einführung in Apache Kafka und zeigt dann, welche Rolle Apache Kafka in einer modernen (Big) Data Architektur spielt und welche Vorteile man damit erreichen kann. Im weiteren wird auf das aktuelle Kafka Ecosystem eingegangen und gezeigt, wie einfach sich Kafka in andere Komponenten wie Storm oder Spark integrieren lässt.",
      "demo": true,
      "trackId": "7",
      "audienceId": "1",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497181",
      "start": "2016-07-07T16:40:00",
      "end": "2016-07-07T17:25:00",
      "title": "[G7] Kotlin - der neue Stern am Java Himmel?",
      "abstractText": "Schreiben Sie immer noch ellenlangen Boilerplate Code und stolpern in Ihren Projekten über Nullpointer Exceptions? Mit Kotlin gehört beides der Vergangenheit an! Kotlin ist eine statisch typisierte Sprache, die für die Entwicklung großer Projekte wie gemacht ist. Dabei besticht sie sowohl mit einer flachen Lernkurve als auch einer hervorragenden Kompatibilität zu bestehendem Java Code.\n\nGemeinsam unterziehen wir die kürzlich erschienene erste offizielle Version der Sprache einem Praxistest und lernen durch praxisnahe Codebeispiele die Unterschiede zu Java kennen. Ein Blick auf die verfügbaren Frameworks rundet den Vortrag ab. Ob Kotlin die Erwartungen erfüllen kann?",
      "demo": true,
      "trackId": "6",
      "audienceId": "1",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497173",
      "start": "2016-07-07T16:40:00",
      "end": "2016-07-07T17:25:00",
      "title": "[F7] Was jeder Java-Entwickler über Strings wissen sollte",
      "abstractText": "Strings sind wahrscheinlich der am meisten verwendete Datentyp in jeder\nJava-Anwendung. Es ist daher nicht überraschend, dass JDK-Ingenieure\nversuchen, Strings möglichst gut zu optimieren oder Bücher über\nPerformanz-Tuning und Testen dem Thema Strings ganze Kapitel widmen.\n\nJeder Entwickler sollte daher wissen, was Strings sind und wie sie\nsinnvoll und effizient eingesetzt werden können. \n\nDieser Vortrag stellt JDK-Klassen vor, die mit und auf Strings\narbeiten, sowohl auf der API- aber auch auf der\nImplementierungsebene. Wir beleuchten internte Strings und die für sie\nverwendeten Speicherbereiche, sowie die noch recht unbekannte\n\"String-Deduplication\"-Option des G1-Garbage-Collectors.",
      "demo": false,
      "trackId": "6",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497053",
      "start": "2016-07-07T15:35:00",
      "end": "2016-07-07T16:20:00",
      "title": "[D6] Algorithmen züchten mit simulierter Evolution - Let's talk about sex ",
      "abstractText": "Die Evolution ist ein erstaunlich effizientes Optimierungsverfahren. Immerhin hat es alle Lebewesen und auch uns quasi aus dem Nichts erschaffen. Mit simulierter Evolution kann man das Prinzip auf viele andere Aufgabenstellungen übertragen.\n\nWie das funktioniert, zeigt der Vortrag an mehreren konkreten und unterhaltsamen Live-Beispielen, wie das Züchten eines Algorithmus. Zusätzlich werden die Grundlagen aus Sicht der Biologie und Mathematik vorgestellt. Die Implementierung wird anhand von Java-Frameworks an Code-Beispielen demonstriert.",
      "demo": true,
      "trackId": "6",
      "audienceId": "1",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497148",
      "start": "2016-07-07T15:35:00",
      "end": "2016-07-07T16:20:00",
      "title": "[C6] Was passt besser zu Big Data, Java oder Python?",
      "abstractText": "Viele Big Data Projekte setzen Spark ein. Spark ist in Java und Scala implementiert, so dass das API von Spark diese Sprachen bestens unterstützt. Python ist andererseits die erste Wahl, um Daten zu analysieren, und wird von Spark ebenfalls unterstützt. \nDie wissenschaftliche Community hat in Jahrzehnten eine Vielzahl von hoch-optimierten Bibliotheken für Numerik, Machine Learning u.v.m. entwickelt. IPython/Jupyter Notebooks sind ein beliebtes Werkzeug für die Entwicklung. \nAlles in allem hat Python einige Highlights zu bieten, die dem Java-Entwickler schon mal zum Staunen bringen können. \nWelche Sprache darf's denn nun sein im nächsten Data Sciene Projekt?\n\nWir haben eine Anwendung entwicklet, um Daten des des öffentlichen Nahverkehrs in Stuttgart auszuwerten. Mit Machine Learning Algorithmen können wir Verspätungen und andere Störungen vorhersagen. Die Tool-Kette besteht aus Celery, ElasticSearch, Kibana, Jupyter Notebooks und Bokeh. Analysen und Vorhersagen haben wir mit sklearn erstellt. \nDie erste reine Python-Implementierung haben wir dann auf PySpark und auf Java übertragen, wobei die MLlib von Spark zum Einsatz kam. \n\nIn diesem Vortrag berichten wir darüber, wie sich Java und Python in einem Big Data Projekt mit Spark schlagen. \nEs geht nicht nur um Performance, sondern auch um die APIs, die Funktionalität, Bibliotheken und die Werkzeuge von Analyse bis\nzu Visualisierung. Wir möchten Ihnen damit zeigen, warum Python im Big Data Bereich so viele Fans hat und warum Sie Python neben Java durchaus in die engere Wahl nehmen sollten.",
      "demo": true,
      "trackId": "5",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497103",
      "start": "2016-07-07T14:30:00",
      "end": "2016-07-07T15:15:00",
      "title": "[D5] The Road to Reactive with RxJava",
      "abstractText": "Reactive Functional programming has a lot of promise and even more hype, but introducing a totally new framework can be very invasive and may only be feasible for green field projects.\n\nWhile most of us love exploring new technologies and methodologies, in reality we are often stuck with adding features and bugfixes on old code, so we're excluded from putting these into practice. This is a fundamental problem: We can't continuously refactor all old code to fit the newest paradigms, but in the long run we also cannot keep writing vintage style code if we want to remain relevant.\n\nIs there a middle road? Rx 'Reactive eXtensions' was initially developed by Microsoft and subsequently ported to many JVM languages by Netflix. RxJava is a regular library and does not require a new framework or methodology to be introduced all across the board. In this talk we'll examine how we can incrementally start using Reactive Extensions, and, equally important, incrementally start reaping benefits.\n\nReactive Functional programming can improve the overall design of API's, it can improve performance, and it can reduce memory footprint.",
      "demo": false,
      "trackId": "6",
      "audienceId": "1",
      "speakerIds": [],
      "languageId": "de"
    },
    {
      "id": "497061",
      "start": "2016-07-07T14:30:00",
      "end": "2016-07-07T15:15:00",
      "title": "[B5] Software verbessern - aber richtig",
      "abstractText": "Unser berufliches Leben besteht zum größten Teil aus erweitern, korrigieren, ändern, patchen, fixen von Software, also _Anpassungen_ bestehender Systeme. \n\nGenau diesen Teil ignoriert die klassische IT-Ausbildung, die primär auf die Neuerstellung fokussiert. Ich zeige im Vortrag pragmatische Wege, wie Sie\ndie wesentlichen Aspekte Ihrer Systeme systematisch verbessern können.\n\nSie lernen, wie Sie:\n\n* die schlimmsten Probleme finden,\n* Ihr Management von Umbaumaßnahmen überzeugen,\n* Verbesserungen mit Ihrem Tagesgeschäft verbinden, \n* mittel- und langfristige Verbesserungen angehen können.\n\nDazu bekommen Sie einen Überblick über die _Architecture Improvement Method_,\ndie (Open-Source) Methodik zur Verbesserung, Modernisierung und Evolution\nvon IT-Systemen. \n\nAnhand realer Beispiele aus unterschiedlichen Domänen zeige ich die Anwendung dieser Praktiken auf mittlere und große IT-Systeme. Damit erhalten Sie konkrete Ansätze,\nManagement und Projektleitung von Verbesserungen zu überzeugen.",
      "demo": false,
      "trackId": "1",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497161",
      "start": "2016-07-07T16:40:00",
      "end": "2016-07-07T17:25:00",
      "title": "[C7] Dokumentation zum Leben erweckt: AsciiDoctor & Gradle",
      "abstractText": "In täglichen Projekten ist jeder mit der Dokumentation konfrontiert und sich darüber bewusst, dass gute Dokumentation ebenso wertvoll ist wie Features, die unmittelbar sichtbaren 'Business Value' liefern.\nDoch immer wieder erleben wir, das Dokumentation (zu) schnell veraltet, auf alten Code verweist oder überholte Code-Schnipsel beinhaltet.\nSowohl Wikis als auch Office Suiten haben sich schon zu häufig aus unterschiedlichen Gründen beim Vorhaben, Softwaresysteme zu dokumentieren, als unpraktisch erwiesen.\nDas Duo aus *AsciiDoctor* und *Gradle* bietet einen Weg aus diesem Dilemma:\nDokumentation nur mit durch Unittests validierten Code-Beispielen! Verknüpfung der Dokumentation im Build-Prozess und in der CI Umgebung um sie gebündelt mit einem Release auszuliefern - und so immer zu einem Softwarestand die richtige Dokumentation zur Hand zu haben!\nDarüber hinaus kann dieses Setup kann die Grundlage dafür sein, Methodiken wie \"Specification by Example\" oder \"Living Documentation\" im Projekt umzusetzen und so mit geringerem Aufwand sicherzustellen, dass man nicht nur technisch korrekte, sondern auch die 'richtigen' Ergebnisse liefert.",
      "demo": true,
      "trackId": "5",
      "audienceId": "1",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497077",
      "start": "2016-07-07T09:50:00",
      "end": "2016-07-07T10:35:00",
      "title": "[C2] MVC - Action-basierte Web-Anwendungen mit Java EE 8",
      "abstractText": "Eine der spannendsten, aber auch kontroversesten Neuigkeiten des kommenden Java EE 8 ist ein neues Web-Framework. Es trägt den (etwas unglücklichen) Namen \"MVC\" und wird im Unterschied zu JavaServer Faces nicht komponenten- sondern action-basiert sein. Damit ermöglicht es einen Programmieransatz, den zwar viele Entwickler favorisieren, der vom Java EE-Standard jedoch bislang nicht unterstützt wurde. MVC basiert stark auf bestehenden Technologien wie CDI und JAX-RS, und bietet daher Entwicklern mit entsprechener praktischer Erfahrung einen besonders leichten Einstieg. In diesem Vortrag werden die Grundlagen von MVC, sowie der aktuelle Stand \nder Spezifikation vorgestellt. Teilnehmer lernen, wie MVC-basierte Anwendungen bereits heute auf Basis der Referenzimplementierung erstellt werden können, wie sich Web-Frontends mit REST-Backends verbinden lassen, und wie man eine Vielzahl von View-Technologien mit MVC kombinieren kann.",
      "demo": false,
      "trackId": "5",
      "audienceId": "1",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497037",
      "start": "2016-07-07T12:15:00",
      "end": "2016-07-07T13:00:00",
      "title": "[B4] Dynamische Softwareentwicklung mit Einbindung bestehender IBM I Systeme\r(sponsored talk)",
      "abstractText": "Vorstellung einer cross Plattform Architektur für Business Anwendungen (Sunshine). Framework für Integration von ISeries (AS400) Business Anwendungen in eine zeitgemäße Umgebung.  Masken , Menues und Joins werden pro Benutzer in der Datenbank gespeichert. Mit dem entsprechenden Frontend werden die Anwendungen auf den verschiedenen Device¿s ausgeführt. Die Anwendung kann mit verschiedenen Frontends ausgeführt werden. Beispielsweise mit dem Java Rich Client, unter Linux, im einem Webbrowser, als native Mobile Anwendung unter IOS, Windows Phone , Raspberry Pi. u.v.m. Oberflächenbeschreibungen wir interpretiert und jeweiligen Plattform visualisiert. Das Besondere ist.  Sunshine ist ein Quelloffenes freies System, bei welchen alle Komponenten als Programmsourcen zur Verfügung stehen. Der Anwender kann wählen, ob er komplett neues System erstellt oder seine vorhandenen Systeme einbindet. Der Benutzer kann ebenfalls vorgefertigte Sunshine Anwendungen importieren und verwenden. Der Anwender kann sich ebenfalls dafür entscheiden die Laufzeitumgebung für seine Zwecke anzupassen. Durch diese Architektur wird erreicht, dass sich alle Masken gleich verhalten. Es können alle IBM I Programme eingebunden werden und alle über JDBC erreichbaren Datenbanken. Sunshine liefert die notwendige Funktionalität, welche für eine Businessanwendung benötigt werde. Benutzerverwaltung , Masken Design , Menusteuerung , Export Import Funktionalität (XLS,DOCX,XML,PDF..), Data Dictionary , Druck Funktionalität und vieles mehr.\nInformation unter: www.tdvweb.de",
      "demo": true,
      "trackId": "1",
      "audienceId": "1",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497008",
      "start": "2016-07-07T12:15:00",
      "end": "2016-07-07T13:00:00",
      "title": "[E4] Java ME - Back to Embedded?!",
      "abstractText": "In der heutigen Zeit bekommt das Stichwort \"Internet of Things\" immer mehr Bedeutung und beschreibt die Vernetzung von gebräuchlichen, elektronischen Gegenständen sowie die Kommunikation zwischen Industriemaschinen. Mit der Java Micro Edition (ME) 8 bietet Oracle eine neue/weiterentwickelte Plattform zur Entwicklung der sogenannten \"Embedded Systems\" und ermöglicht den Zugriff auf die Hardware eines Controllers. Dieser Vortrag bietet einen Einstieg in die Java ME Welt und bezieht sich dabei auf die neuen Java ME 8 APIs (CLDC 8, MEEP 8, GCF 8, Device I/O). Des Weiteren wird auf das neue Security Konzept und die Java VM auf Embedded Devices eingegangen. Anhand eines Modells werden die Basisfunktionalitäten der Java ME 8 demonstriert.",
      "demo": true,
      "trackId": "7",
      "audienceId": "1",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497153",
      "start": "2016-07-07T16:40:00",
      "end": "2016-07-07T17:25:00",
      "title": "[A7] Stream Processing Plattformen und die Qual der Wahl",
      "abstractText": "Stream Processing ist zur Zeit in aller Munde. So verwundert es nicht, dass immer mehr Stream Processing Plattformen auf dem Markt verfügbar sind. Zu den populärsten gehören dabei die Apache Projekte Storm, Spark, Samza und Flink. Während alle diese Frameworks Stream Processing anbieten gibt es doch erhebliche Unterschiede in der Art und Weise wie dies bewerkstelligt wird.\n\nIn diesem Vortrag werde ich auf die unterschiedlichen Formen des Stream Processing eingehen und anschließend die vier oben genannten Framework vergleichen und Einsatzszenerien für diese vorstellen.",
      "demo": false,
      "trackId": "1",
      "audienceId": "1",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497165",
      "start": "2016-07-07T16:40:00",
      "end": "2016-07-07T17:25:00",
      "title": "[D7] Project Jigsaw in JDK 9: Modularity Comes To Java",
      "abstractText": "Project Jigsaw will bring modularity to the Java platform; something that will enable better security, performance and flexibility for deployment of applications. This talk will look at the fundamentals of how modularity in Java will work. Developers will need to understand that these changes go significantly further than just separating the standard class libraries into a number of discrete units.\n\nThis talk will explain the impact project Jigsaw will have on developers in terms of building their applications, as well as helping them to understand how things like encapsulation will change in JDK 9.",
      "demo": true,
      "trackId": "6",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497041",
      "start": "2016-07-07T15:35:00",
      "end": "2016-07-07T16:20:00",
      "title": "[E6] Developing Java Applications with Eclipse Neon",
      "abstractText": "Every year, the Eclipse Simultaneous Release brings together the hard work of dozens of open source projects into a single coordinated release. For the Eclipse IDE, this year¿s Neon release introduces significant changes in look and feel, a new centralized user preferences storage service, Android development tools, Gerrit integration, and more. This session walks through these and many more the new IDE features that will make you more productive, including a preview of the ongoing work to support Java 9.",
      "demo": true,
      "trackId": "2",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497098",
      "start": "2016-07-07T08:45:00",
      "end": "2016-07-07T09:30:00",
      "title": "[D1] Neues von JUnit: Architektur, API und Erweiterbarkeit in der Version 5",
      "abstractText": "Beim Test-Framework JUnit hat im Oktober letzten Jahres die Entwicklung der grundlegend überarbeiteten Version 5 begonnen.\nNach einer Startfinanzierung durch die Crowdfunding-Kampagne \"JUnit Lambda\" und einem Alpha-Release im Februar\narbeitet das JUnit5-Team mittlerweile an Milestone-Releases,\ndie noch in diesem Jahr zu einer Version 5.0 führen sollen.\nWir berichten in diesem Vortrag über die Gründe für die Neuentwicklung, sowie über die Vision für JUnit5.\nWeiter stellen wir die neue, stark modulare Architektur vor,\ndie mit besonderem Fokus auf Erweiterbarkeit und Integrierbarkeit in Tools entworfen wurde.\nNicht zuletzt bringt das neue Release neben vielem Bewährten auch manche interessante Neuerungen für Entwickler,\ndie in diesem Vortrag natürlich nicht zu kurz kommen sollen.",
      "demo": false,
      "trackId": "6",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497202",
      "start": "2016-07-07T14:30:00",
      "end": "2016-07-07T15:15:00",
      "title": "[E5] Eclipse Che: Next-Generation Eclipse IDE",
      "abstractText": "Eclipse Che introduces a new kind of workspace that is composed of projects and runtimes. This approach improves agile workflow and allows fast bootstrapping of developers. Eclipse Che can run locally or in the cloud which allow to scale the resources on-demand and benefit from high performances and resources.\n\nIn this session, we will explain how to setup a workspace cloud in Eclipse Che, how to create the environments using Docker, configure the tools that you need and register a set of commands to be executed in that workspace. We will show you how you can benefits from the workspace portability to easily share it onto another Che or to the cloud.\n\nWe will also show the advanced features of Eclipse Che, showing how the engineers who are contributing to the project are actually adopting and using it.",
      "demo": true,
      "trackId": "2",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497157",
      "start": "2016-07-07T15:35:00",
      "end": "2016-07-07T16:20:00",
      "title": "[A6] Softwaremigration in Webzeitalter",
      "abstractText": "Die Migration unserer Software kann doch kein Problem sein wenn man dazu schon Lehrbuchlösungen findet. Der Vortrag diskutiert Probleme klassischer Migrationsstrategien wie z.B. Big Bang , Chicken-Little Strategy oder Database First Approach auf Ihre in der Praxis der Webanwendungsentwicklung auftretenden Probleme. Anhand praktischer Erfahrungen mit dem Versagen klassischer Lösungsstrategien werden alternative Denkansätze und Lösungsstrategien wie z.B. MicroSOA, Modularisierung oder Service- Mashup als Alternativen präsentiert. Der Vortrag diskutiert Probleme folgender Migrationsstrategien:Big Bang Approach (Cold Turkey Strategy), Chicken Little Strategy, Database First Approach (Forward Migration Method), Database Last Approach (Reverse Migration Method), Composite Database Approach (Parallel Database Strategy) und Butterfly Methodology. .Anhand praktischer Erfahrungen mit dem Versagen klassischer Lösungsstrategien werden alternative Denkansätze und Lösungsstrategien zu jedem präsentiertem Problem bzw. zu jeder Einschränkung der klassischen Lösung in der modernen Entwicklungspraxis diskutiert.",
      "demo": false,
      "trackId": "1",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497065",
      "start": "2016-07-07T08:45:00",
      "end": "2016-07-07T09:30:00",
      "title": "[G1] Last- und Performancetest verteilter Systeme mit Docker & Co",
      "abstractText": "Neben den fachlichen Tests auf Unit-, Integrations- und Systemebene müssen zusätzliche Tests das nichtfunktionale Verhalten eines Systems berücksichtigen. Ein Beispiel dafür sind Last- und Performancetests, die das Verhalten des Systems in seinen Grenzbereichen und außerhalb seiner Grenzen überprüfen. Verteilte Systeme stellen beim Test eine besondere Herausforderung dar, weil zusätzlich zum Verhalten eines einzelnen Systems die Kommunikation innerhalb des Gesamtsystems eine große Rolle spielt.\n\nFür den Test sollte eine möglichst realitätsnahe Umgebung zur Verfügung zu stehen, allerdings ist es meist nicht möglich, Szenarien mit 10.000 oder mehr vollwertigen Knoten zu Testzwecken aufzusetzen. Wie testet man also die Performance solcher Systeme möglichst realistisch und im Idealfall automatisiert?\n\nModerne Virtualisierungsumgebungen wie Docker bieten sich hier als Lösung an. Anhand eines Praxisbeispiels, eines Java-basierten Konfigurationsservers als Teil einer Kassenlösung, die weltweit verteilt zum Einsatz kommt, werden die Möglichkeiten beleuchtet und praktische Tipps für den Test verteilter Systeme im Allgemeinen und den Last- und Performancetest im Besonderen gegeben.",
      "demo": false,
      "trackId": "4",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497016",
      "start": "2016-07-07T08:45:00",
      "end": "2016-07-07T09:30:00",
      "title": "[B1] Datenbanken? Wo wir hinfahren, brauchen wir keine Datenbanken\r(sponsored talk)",
      "abstractText": "Mit Event Sourcing reisen sie zu dem Zeitpunkt zurück, an dem ihr Produktivsystem einen Fehler hatte, lösen diesen und korrigieren die Zukunft.\n\nIn diesem Vortrag lernen sie Event Sourcing und CQRS (Command Query Responsibility Segregation) kennen und wie Java-Anwendungen damit realisiert werden können. Wesentliche Merkmale dieser Architektur sind die Aufteilung von lesenden und schreibenden Operationen und das Speichern von unveränderbaren Events. Dadurch entfällt der Bedarf für eine relationale Datenbank. Darüber hinaus sollen die Vor- und Nachteile im Vergleich zu einer klassischen Schichten-Architektur betrachtet werden.\n\nDiese Architekturmerkmale liefern ihnen verschiedene Vorteile, die je nach Anwendung unterschiedlich stark zum Tragen kommen. Unter anderem erhält man ein Audit-Protokoll, die Möglichkeit asymmetrisch zu skalieren (lesen und schreiben getrennt) und vermeidet den object-relational impedance mismatch. Außerdem können zu einem späteren Zeitpunkt weitere Informationen aus den Events gewonnen, Fehler leichter gefunden und korrigiert werden. Mit Event Sourcing ist man flexibler und kann das System leichter testen. Es führt auch zu einer Reduzierung der Komplexität, da die Geschäftslogik für den schreibenden und lesenden Zugriff getrennt implementiert werden kann.",
      "demo": false,
      "trackId": "1",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497073",
      "start": "2016-07-07T08:45:00",
      "end": "2016-07-07T09:30:00",
      "title": "[A1] Mit Eclipse IoT, Java EE und Code-Generierung zum automatisierten Gewächshaus",
      "abstractText": "Um maßgeschneiderte IoT-Lösungen zu entwickeln, benötigt man Embedded- und Enterprise-Entwickler. Nur selten vereinen Entwickler Wissen und Erfahrungen aus beiden Bereichen. Alle Beteiligten arbeiten dabei mit denselben Daten: Sensordaten. Diese Aufgabe zu meistern und gleichzeitig die Komplexität von verteilten Anwendungen in den Griff zu bekommen, ist eine Herausforderung bei der Entwicklung von Lösungen für das Internet der Dinge.\n\nDer Vortrag zeigt am Beispiel eines automatisierten Gewächshauses, wie man mit der geballten (Innovations-)Kraft der Open Source Software von Eclipse IoT und Java EE zusammen mit dem Einsatz von Modellierung und Code-Generierung die Aufgabe geschickt lösen kann. Für die Umsetzung der IoT-Lösung kommt ausschließlich Java als Programmiersprache zum Einsatz. Im Gewächshaus sind ein Raspberry Pi 2 und je ein Temperatur-, Bodenfeuchtigkeits-, Gas-, Helligkeits-, Luftdruck- und Näherungs-Sensor verbaut. Darüber hinaus werden eine LCD-Anzeige, eine Wasserpumpe, ein LED-Strip und ein Buzzer verwendet. Das Gewächshaus wird zum Vortrag mitgebracht und vorgeführt.\n\nAuf der Software-Seite sind JSF, JAX-RS, JAXB, EJB, JPA, OSGi und die Eclipse-Projekte Kura, Mosquitto, Paho und Californium ¿verbaut¿. Zur Übertragung von Sensordaten werden die Kommunikationsprotokolle MQTT und CoAP genutzt. Entwickelt wird mit der aktuellen Eclipse-Version: Mars. Die Code-Generierung wird mit der Virtual Developer Platform erledigt.\n\nAuf Bitbucket steht die Gewächshaus-Software als Open Source (EPL) in einem öffentlichen Repository zur Verfügung. Für Interessierte ist der Nachbau des Gewächshauses anhand der ebenfalls dort zu findenden Anleitung mit überschaubaren Kosten und Aufwänden machbar.",
      "demo": true,
      "trackId": "7",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497135",
      "start": "2016-07-07T15:35:00",
      "end": "2016-07-07T16:20:00",
      "title": "[G6] Kontinuierliche und automatisierte Pentests",
      "abstractText": "Im Software Entwicklungsprozesses ein Bewusstsein für Security zu erzeugen und diese kontinuierlich zu berücksichtigen ist eine Grundvoraussetzung um hochwertige Software zu entwickeln.\nWir zeigen eine automatisierte Gesamtlösung für Security-Prüfungen und berichten von unseren Praxiserfahrungen damit.\nTechnologien wie Docker, Camunda und Consul bilden die Basis um automatisiert Schwachstellentests durchzuführen.\nHierbei werden freie oder unter Open Source Lizenz stehende Spider und Scanner wie die bekannten OWASP ZAP oder Burp flexibel konfiguriert und genutzt.\nDie Besonderheit der Lösung besteht in der hohen Integrationsfähigkeit in vorhandene Build-Prozesse z.B. über Bamboo & Jenkins, die wir live zeigen werden.\nEs ist eine skalierbare Security-Auditing-Lösung, die schnelles Feedback an Entwickler und Betrieb gibt.",
      "demo": true,
      "trackId": "3",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497029",
      "start": "2016-07-07T15:35:00",
      "end": "2016-07-07T16:20:00",
      "title": "[B6] Neo4j in der Praxis - ein Erfahrungsbericht\r(sponsored talk)",
      "abstractText": "Neo4j ist eine moderne Datenbank aus dem Bereich der NoSQL-Datenbanken. Sie folgt dem Graphenmodell im Gegensatz zu relationalen Datenbanken, die dem Modell der Mengenlehre folgen. Dieser Vortrag berichtet über die Erfahrungen, die bei der Implementierung einer interessanten und komplexen Anwendung gemacht wurden. Welche Vorteile bietet Neo4j im Gegensatz zu anderen Datenbanken und was muss beim modellieren berücksichtigt werden? Was sind die Vorteile der Abfragesprache Cypher und wie sieht es mit der Performance aus?",
      "demo": false,
      "trackId": "1",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497020",
      "start": "2016-07-07T11:10:00",
      "end": "2016-07-07T11:55:00",
      "title": "[C3] From APM Experts for Everyone: Application Performance Management with Open Source Tooling\r(sponsored talk)",
      "abstractText": "In vielen Software-Projekten wissen häufig nicht nur Anwender sondern auch Entwickler nicht warum sich die Anwendung nicht verhält wie erwartet. Wieso ist meine Anwendung so langsam? Warum ist die Anwendung gerade jetzt nicht verfügbar? An Performance-Tests wurde während der Entwicklung nicht gespart. Aber selbst die innovativste Software ist nutzlos, wenn die Performance und Verfügbarkeit nicht gewährleistet ist. Was kann also das Problem sein? Abhilfe schafft in solchen Fällen die Integration von Application Performance Management in den Entwicklungsprozess und den Betrieb. Eine sinnvolle Integration von Application Performance Management erfordert noch immer tiefgreifendes Expertenwissen um möglichst großen Nutzen und wenig Schaden zu generieren.\n\nIn diesem Vortrag geben wir eine Übersicht wie sich Application Performance Management sinnvoll in den Entwicklungsprozess und Betrieb einer Software-Anwendung integrieren lässt und gehen auf Stolperfallen ein, die es zu bewältigen gilt (z.Bsp. eine sinnvolle Konfiguration der Instrumentierung zur Datensammlung). Außerdem zeigen wir, welche Metriken einen Nutzen haben und welche nur wenig Aussagekraft besitzen, wenn es darum geht Probleme zu erkennen. Ist erst einmal ein Problem erkannt, muss die Ursache in vielen Fällen möglichst schnell herausgefunden werden. Wir stellen dar, welche Good Practices sich bei uns bewährt haben um die Ursachen von Performance Problemen zu diagnostizieren. Um den Vortrag abzurunden und den Inhalt in der Praxis nutzen zu können, zeigen wir auf, welche Open Source Tools eingesetzt werden können, um bestimmte Aufgaben zu adressieren, sodass ein umfassendes Application Performance Management ohne kommerzielle Werkzeuge möglich ist.",
      "demo": true,
      "trackId": "5",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "505440",
      "start": "2016-07-07T14:30:00",
      "end": "2016-07-07T15:15:00",
      "title": "[G5] Continuous Delivery of Continuous Delivery",
      "abstractText": "Continuous Delivery of Continuous Delivery\n\nViele Organisationen haben in den letzten Jahren eine Plattform für\nContinuous Integration oder gar Continuous Delivery aufgebaut. Man\nkann auch die Plattform selbst nach dem Prinzip \"Infrastructure as\nCode\" erstellen und kontinuierlich reproduzieren und testen, sie also\nzum Gegenstand einer Continuous Delivery Strategie machen. Damit lässt\nsich nicht nur die Funktionsfähigkeit der Plattform permanent prüfen\nund garantieren, sondern es können auch sehr leicht weitergehende Use\nCases abgebildet werden, z.B. Weiterentwicklung/Upgrade einer\nKomponente, Integration neuer Komponenten/Plugins, Austausch einer\nKomponente. Außerdem lassen sich beispielsweise Mitarbeiter oder\nEntwickler damit schulen oder komplexe CI-/CD-Prozesse testen,\nbeispielsweise das Release von Komponenten.\n\nIm Vortrag wird eine Referenz-Plattform aus typischen Open\nSource-Komponenten, wie sie sich im Java-/Enterprise-Umfeld finden,\nvorgestellt:\n\n- SCM-Manager (Source Code Management mit SVN, Git oder Mercurial)\n- Nexus (Artifact-Repository)\n- Jenkins (Build-Server)\n\nEs wird zunächst demonstriert und erklärt, wie die die Plattform als\nvirtuelle Maschine mit Vagrant und Puppet aufgebaut wird, die\nKomponenten werden dabei weitgehend als Docker-Container installiert.\nAnschließend wird gezeigt, wie die Plattform sich selbst reproduziert\nund dabei kontinuierlich einen Test-Prozess durchläuft. Zum Testen\nwird ein Java-basiertes Software-Paket als Referenz-Projekt von der\nautomatisch errichteten Plattform gebaut. Ein Reproduktions-Zyklus ist\nabgeschlossen, wenn die Plattform das Referenz-Projekt erfolgreich\nbauen kann. Typische Ereignisse, die einen erneuten Durchlauf\nerfordern und anstoßen, werden diskutiert.",
      "demo": true,
      "trackId": "5",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497119",
      "start": "2016-07-07T08:45:00",
      "end": "2016-07-07T09:30:00",
      "title": "[C1] Grundlegendes Domain-Driven Design für Microservices",
      "abstractText": "Der Trend zu kleineren Softwaresystemen stellt Entwickler beim Design dieser System vor neue Herausforderungen: in welche Teile separiere ich meine Domäne? Wie referenziere ich logisch gleiche Artefakte eines Gesamtsystems in den einzelnen Teilsystemen. Domain Driven Design definiert verschiedene Konzepte um Komplexität in Software beherrschbarer zu machen. Der Vortrag stellt die im Kontext von Microservices grundlegendsten und wichtigsten vor und erläutert, warum gerade diese es sind die in einer Landschaft kleiner Systeme so wichtig sind.\n\nDer Vortrag zeigt auf, wie sehr Konzepte aus DDD gerade im Kontext von Microservices von höchster Wichtigkeit sind: Bounded Contexts, Aggregates, Context Maps. Er zeigt auf, welch enge Beziehung zwischen beiden Themen besteht und wie sie sich gegenseitig beeinflussen.",
      "demo": false,
      "trackId": "1",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497057",
      "start": "2016-07-07T11:10:00",
      "end": "2016-07-07T11:55:00",
      "title": "[B3] Microservices lieben Domain Driven Design: warum und wie?",
      "abstractText": "Zweifelsohne kann das Buch \"Domain Driven Design\" von Eric Evans als \"Muss\" für Software Architekten und Entwickler betrachtet werden. Die dort geschilderten Ideen sind heute im Kontext von Trends wie Microservices relevanter denn je. Dabei gilt es jedoch zu berücksichtigen, dass Domain Driven Design nicht einfach nur auf Aggregate, Entitäten und Services zu reduzieren ist und dass es viel tiefergehende Zusammenhänge zwischen DDD und Microservices wie den Bounded Context gibt.\nAn dieser Stelle setzt der Vortrag an: wir werden Schritt für Schritt erkunden, wie uns die Ideen und Patterns beim Aufbau und Design von Microservice Landschaften helfen. Des Weiteren werden wir betrachten wie wir mit Hilfe von Domain Driven Design eine bestehende Landschaft in Richtung von Microservices migrieren können.",
      "demo": false,
      "trackId": "1",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497177",
      "start": "2016-07-07T15:35:00",
      "end": "2016-07-07T16:20:00",
      "title": "[F6] SOLID mit Java 8",
      "abstractText": "Die SOLID Prinzipien - geprägt von Robert C. Martin - gehören heutzutage zum festen Handwerkszeug eines jeden Clean Code Developers. Die 5 Prinzipien sind Single Responsibility, Open/Closed, Liskov Substituition, Interface Segregation und Dependency Inversion. Sie unterstützen uns Entwickler verständliche, erweiterbare und langlebige Software zu erstellen. Java 8 kam mit großen Neuerungen wie Lambdas und Streams heraus. Daneben gibt es jedoch interessante Änderungen, die weniger im Rampenlicht stehen. In dem Vortrag werden einige der neuen Sprach-Features aus der Sicht der SOLID-Prinzipien beleuchtet.  Dazu werden wir auf der einen Seite Java 8 aus Nutzer-Sicht betrachten.  Wir werden uns die Frage stellen, in welchen Bereichen die Sprache uns Entwickler noch besser unterstützen kann. Auf der anderen Seite werden wir auch sehen, wie die JDK-Designer die SOLID-Prinzipien berücksichtigt haben.\nGehen Sie mit mir auf einen Streifzug durch die Java 8 Welt und lernen Sie die neuen Sprachfeatures SOLIDe kennen.",
      "demo": false,
      "trackId": "6",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497081",
      "start": "2016-07-07T12:15:00",
      "end": "2016-07-07T13:00:00",
      "title": "[D4] Über den Umgang mit Lambdas",
      "abstractText": "Über Lambdas gibt es ja eigentlich nicht mehr viel zu sagen ¿ aber Probleme gibt es immer noch. Was macht man beispielsweise, wenn im Lambda-Ausdruck etwas benötigt wird, das eine \"Checked Exception\" werfen will? Soll man die dann ignorieren oder doch lieber in eine RuntimeException packen? Und muss ich das dann immer und immer wieder machen, oder könnte man sich nicht etwas schreiben, das einem diesbezüglich das Leben vereinfacht.\nIn diesem Vortrag wird gezeigt, was man mit Lambda-Ausdrücken alles machen kann und warum diese dadurch so unverzichtbar werden. Darüber hinaus wird gezeigt, wie man einiges einfacher und übersichtlicher Gestalten kann. Und schließlich wird noch gezeigt, welchen \"Unfug\" man damit machen kann.",
      "demo": true,
      "trackId": "6",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "503085",
      "start": "2016-07-07T09:50:00",
      "end": "2016-07-07T10:35:00",
      "title": "[E2] Microservices mit Jersey und einem In-Memory Data Grid",
      "abstractText": "Microservices-Architekturen ermöglichen den modularen Aufbau von komplexen Web-Anwendungen, die aus leichtgewichtigen, unabhängig installierbaren Microservices bestehen, die leicht zu testen und betreiben sind.\n\nJersey 2, die Referenzimplementierung von JAX-RS 2.0, liefert die Grundlage für die empfohlene RESTful Kommunikation mit Microservices, die in Java erstellt wurden. Jenseits der Java EE API bietet Jersey die Möglichkeit, leichtgewichtige Microservices zu bauen, die besser für Monitoring geeignet sind, ohne vollständige Java EE Container auskommen, sowie eine Reactive-Programming API zur asynchronen client-seitigen Microservice-Orchestrierung. \n\nDiese Features werden in einer Demo-App erläutert. Die Demo-App wird durch einen  In-Memory Data Grid basierten State-Microservice erweitert und somit hoch-skalierbar und hoch-verfügbar gemacht.",
      "demo": true,
      "trackId": "1",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497069",
      "start": "2016-07-07T08:45:00",
      "end": "2016-07-07T09:30:00",
      "title": "[F1] JavaFX in professionellen Anwendungen",
      "abstractText": "Nachdem man sich mit Demos, Tutorials und eigenen Experimenten fit in JavaFX gemacht hat, stellt sich die Frage: Wie geht es nun weiter?\n\nAnhand von echten, professionellen Anwendungen werden ausgewählte Probleme aus dem JavaFX-Alltag besprochen und Lösungswege \"an echtem Code\" erklärt.\n\nDie gezeigten Anwendungen sind keine internen Prototypen oder kundenspezifische GUIs, sondern echte \"Off-the-Shelf\"-Produkte eines deutschen ISV (Independent Software Vendor).",
      "demo": true,
      "trackId": "8",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497198",
      "start": "2016-07-07T14:30:00",
      "end": "2016-07-07T15:15:00",
      "title": "[F5] Top Performance Bottleneck Patterns Deep Dive",
      "abstractText": "This talk was given at JavaOne 2015 - hope that the JFS Community also appreciates the topic!\n\nMost performance problems in Java Applications under load dont require a large load test to find out. The top problems in the last years are all around architectural issues such as excessive database access, bad call patterns to your (micro)-services, allocating too many objects, bad connection pool handling or badly deployed and configured frameworks.\n\nIn this session I show you several real life use cases of people that shared their performance data with me. I walk you through my analysis process, the metrics to look at and how to capture these metrics. The ultimate goal is to perform these checks in your Continuous Integration. Therefore I am going to show how you can extend your unit and integration tests and bundle it up with free available performance tools such as Dynatrace, Ruxit, AppDynamics, NewRelic, ... to get these checks done automatically",
      "demo": true,
      "trackId": "5",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "de"
    },
    {
      "id": "497140",
      "start": "2016-07-07T14:30:00",
      "end": "2016-07-07T15:15:00",
      "title": "[C5] Getting Started mit OSGi Declarative Services",
      "abstractText": "OSGi declarative services sind schon seit langem das Mittel der Wahl um eine modulare Service-orientierte Architektur mit Java umzusetzen. Aufgrund ihrer Dynamik und der einfachen Art Services zu definieren, zu registrieren und zu konsumieren, werden sie immer häufiger in verschiedensten Szenarien vorgefunden. Mit Eclipse 4 werden Declarative Services häufiger eingesetzt und Equinox spezifische extension points eher seltener verwendet. Mit Eclipse Neon wird auch in die PDE der Support für Declarative Services Annotations eingebunden, so dass das Schreiben von Declarative Services einfacher wird.\n\nDieser Vortrag gibt einen Einstieg in die Erstellung und Verwendung von Declarative Services, in und außerhalb von Eclipse. Außerdem werden verschiedene weiterführende Techniken in Bezug auf DS aufgezeigt.",
      "demo": false,
      "trackId": "5",
      "audienceId": "1",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497169",
      "start": "2016-07-07T16:40:00",
      "end": "2016-07-07T17:25:00",
      "title": "[E7] Go for the Money! JSR¿354",
      "abstractText": "In letzter Zeit entwickelt sich Java wieder schneller weiter und es haben viele lang ersehnte Erweiterungen Einzug gehalten. Die bekanntesten sind sicherlich die neue Date & Time API sowie Lambdas und Streams. Gerade für Business-Anwendungen, die häufig mit Geldbeträgen und oft auch unterschiedlichen Währungen arbeiten müssen, ist eine weitere Neuerung ziemlich hilfreich: JSR¿354 ¿ Money and Currency API\n\nWas hat es nun mit diesem JSR auf sich, weshalb wird eine Money and Currency API benötigt? Nach der Beantwortung dieser Fragen gibt es einen Überblick über die neue API, deren Packages und Klassen. Dieser Überblick wird durch mehrere Anwendungsbeispiele ergänzt, die das Rechnen, Formatieren, Parsen, den Umgang mit verschiedenen Währungen, das Umrechnen zwischen ihnen und auch das Data-Binding mit JavaFX in der Anwendung zeigen.\n\nAm Ende des Vortrags wird eine Demo-Anwendung auf Basis von Java SE 9 präsentiert, die die neue Money and Currency API im praktischen Einsatz zeigt. Sowohl der Quelltext dieser Demo-Anwendung als auch die Präsentation wird den Teilnehmenden zur Verfügung gestellt.\n\nDer JSR¿354 ist derzeit zur Auslieferung mit Java SE 9 vorgesehen, welches voraussichtlich im September 2016 erscheinen wird.",
      "demo": true,
      "trackId": "6",
      "audienceId": "1",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497185",
      "start": "2016-07-07T09:50:00",
      "end": "2016-07-07T10:35:00",
      "title": "[F2] Von Shitstorms und Reaktionszeiten - Predictive Analytics mit Spark Streaming",
      "abstractText": "Predictive Analytics gibt das Versprechen, Entwicklungen und daraus\nresultierende Probleme frühzeitig zu erkennen um dann auch  gegensteuern zu können. Dazu ist es notwendig, dass die Informationen zeitnah zur Verfügung stehen. Welche Probleme und Fragestellungen das sein können, wird anhand eines realen Beispiels aufgezeigt: Das Diskussions- und Support-Forum einer Online-Lernplattform. Der Vortrag erläutert, wie aus den Nachrichten des Forums beispielsweise Fragen nach der Servicequalität und der Zufriedenheit der Benutzer beantwortet werden können. Eine mögliche Plattform für die Umsetzung ist Apache Spark Streaming. Nach einer kurzen Einführung in Apache Spark Streaming zeigt der Vortrag die konkrete Umsetzung der Eingangs skizzierten Fragestellungen. Für die Umsetzung ist nicht nur Technologie notwendig, es sind auch Verfahren zur Textklassifikation oder einfache statistische Analysen notwendig. Der Vortrag beleuchtet sowohl die Theorie als auch die praktische\nUmsetzung mit Spark Streaming.",
      "demo": true,
      "trackId": "4",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497093",
      "start": "2016-07-07T09:50:00",
      "end": "2016-07-07T10:35:00",
      "title": "[G2] Spark vs. Flink - Rumble in the (Big Data) Jungle",
      "abstractText": "Nachdem sich Apache Spark im letzten Jahr als ernsthafte Alternative unter den Big Data Frameworks etablieren konnte und Hadoop MapReduce den Rang abläuft, kommt nun aus Berlin unerwartet Konkurrenz in Form von Apache Flink. \n\nDie Ähnlichkeiten zwischen beiden Frameworks sind unverkennbar. Beide setzen auf In-Memory Processing und einen integrativen Ansatz zur Umsetzung von Data Processing Pipelines. Ersteres beschleunigt die Verarbeitung, letzteres vereinfacht sowohl Entwicklung als auch Betrieb komplexer Big Data Applikationen. \n\nBei genauerer Betrachung treten aber grundsätzliche Unterschiede zu Tage. Den Kern von Spark bildet eine Batch Processing Engine, während Flink auf einer Stream Processing Engine aufbaut. Auf diesen Engines werden dann alle anderen Abstraktionen abgebildet. Gerade dieser konzeptionelle Unterschied ist auch in der alltäglichen Arbeit mit den Frameworks hochrelevant.\n\nWir werden die Hauptkonzepte der beiden Konkurrenten durch viele Codebeispiele beleuchten, Schwächen und Stärken vergleichen, aber auch auf Performance und Entwicklungskomfort eingehen.",
      "demo": true,
      "trackId": "4",
      "audienceId": "1",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497025",
      "start": "2016-07-07T09:50:00",
      "end": "2016-07-07T10:35:00",
      "title": "[D2] Workflows mit BPMN & Business Rules mit DMN - Open Source und in Action mit Camunda BPM\r(sponsored talk)",
      "abstractText": "Erwarten Sie plumpes Marketing für unsere BPM Platform! Ähm - wie bitte? Nein - natürlich das genaue Gegenteil! Im Vortrag möchte ich live demonstrieren (und codieren!) wie bestimmte Sachverhalte in BPMN 2.0 (Workflows) und vor allem auch dem brandneuen DMN Standard (Business Rules mit Entscheidungstabellen) grafisch modelliert und dann direkt auf einer Java Engine ausgeführt werden. Dazu verwende ich die quelloffene Camunda BPM Platform - so dass alles direkt zu Hause nachgebaut werden kann! In der Session diskutiere ich mögliche Architekturen von klassischer SOA bis zu Spring Boot basierenden Microservices. Natürlich dürfen Best Practices sowie ein bisschen Meinung nicht fehlen, z.B. dass \"Zero-Code-Lügen¿ in die Märchenbücher gehören - und nicht in Marketingmaterialien der Hersteller!",
      "demo": true,
      "trackId": "6",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497131",
      "start": "2016-07-07T08:45:00",
      "end": "2016-07-07T09:30:00",
      "title": "[E1] Eclipse on Steroids - Boost your Eclipse and Workspace Setup",
      "abstractText": "Die Eclipse IDE ist eine etablierte Größe in der Welt der Software-Entwicklung: Open-source, skalierbar und von einer lebendigen Community vorangetrieben. In Zeiten von verteilten Teams, kurzen Release-Zyklen und agilen Methoden ist es unabdingbar, Entwickler möglichst schnell mit den richtigen Werkzeugen auszurüsten.\nMit Profiles for Eclipse lassen sich ganze Eclipse und Workspace Set-Ups schnell und ohne Aufwand an Entwickler-Teams verteilen und aktuell halten. Ziel dabei: Den Aufwand bei Projektbeginn sowie den Wartungsaufwand minimieren. Ich zeige anhand einer Live-Demo wie Teams mit Profiles for Eclipse wertvolle Zeit gewinnen.",
      "demo": true,
      "trackId": "2",
      "audienceId": "1",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497049",
      "start": "2016-07-07T11:10:00",
      "end": "2016-07-07T11:55:00",
      "title": "[D3] Klappe auf! Was macht die JVM denn da?",
      "abstractText": "Was tun, wenn ein Troubleshooting in der Produktion, eine Analyse eines Lasttests oder einfach die Unterstützung der Entwicklung auf anderen Systemen durch den Betrieb angesagt ist? Ein langjähriger Java-Administrator gewährt einen Blick in die Trickkiste und berichtet, welche Werkzeuge und Vorgehensweisen sich für ihn in den Fällen bewährt haben, in denen keine graphischen Analyse- und Monitoringwerkzeuge zur Verfügung stehen. Es geht um die im JDK mitgelieferten Tools jstat/jinfo/jmap/jstack und das neue jcmd. Damit das Troubleshooting möglichst erfolgreich abläuft, muss man sich nicht auf das Glück verlassen, sondern es wird ein systematisches Vorgehen vorgestellt, mit dem sich diese Situation zuverlässig und wiederholbar meistern lässt.",
      "demo": true,
      "trackId": "6",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497206",
      "start": "2016-07-07T11:10:00",
      "end": "2016-07-07T11:55:00",
      "title": "[G3] Lasttests mit Selenium",
      "abstractText": "In einem aktuellen Projekt haben wir uns entschieden die Lastests nicht mit den \"klassischen\" Tools wie JMeter oder Gattling umzusetzen, sondern unsere Applikation mit massiv parallelen Selenium-Webtests unter Last zu setzen. Hauptargumente dafür waren:\n\n    Schwieriges Setup einer realistischen Lastsimulation bei stark AJAX-lastigen Webseiten mit den klassischen Tools.\n    Wiederverwendung der Webtests und deren Infrastruktur und Page Objects in den Lastest.\n    Vertrauter Java Code in den Tests (keine Einarbeitung in neue Tools nötig).\n    Messung der Lade- und Interaktionszeiten während der Lastests in echten Browsers.\n\nKern dieses Konzepts war ein neuer JUnit-Runner mit welchem wir beliebige Tests n-fach parallel und m-fach nacheinander ausführen können, kombiniert mit der Möglichkeit diese Tests über Spring flexibel konfigurieren zu können. Hinzu kam ein Selenium-Grid, welches die Browser-Instanzen zur Verfügung stellt und eine Statistikkomponenten zum Erfassen verschiedener Zeitstempel innerhalb der Browser (über JavaScript) und in den Tests selbst.\n\nDer Vortrag stellt die technischen Details des Setups dar, berichtet über die von uns gesammelten Erfahrungen und soll die Zuhörer in die Lage versetzen das Setup in eigenen Projekten zu verwenden.",
      "demo": true,
      "trackId": "2",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497033",
      "start": "2016-07-07T11:10:00",
      "end": "2016-07-07T11:55:00",
      "title": "[E3] Automatisierung von Multi-Platform und Device GUI Tests\r(sponsored talk)",
      "abstractText": "Durch die Vielseitigkeit an Plattformen und Geräten die üblicherweise genutzt werden stellt sich oft die Anforderung, unterschiedliche Clients (Mobile, Desktop, Web) für dieselbe Anwendung bereitzustellen und auch zu warten.\n\nDies erhöht den Test-Aufwand erheblich. Zwar kann durch Unit-Tests und Mocking die Anwendungs-Logik ohne Interaktion mit der Anwendungs-Oberfläche unabhängig und effizient getestet werden. Allerdings kann so keine umfassende Test-Abdeckung erreicht werden um eine Aussage über die korrekte Funktionalität der Anwendung und unterschiedlichen Clients zu machen. Dazu sind zusätzliche Oberflächentests notwendig.\n\nIn diesem Vortrag wird aufgezeigt, wie man GUI Tests automatisieren kann, wenn diese für Reihe von unterschiedlichen Clients (Mobile, Desktop, Web) der selben Anwendung ausgeführt werden sollen.\n\nDafür wird die Methodik des Behavior Driven Development und Testing (BDD) als Abstraktionsebene herangezogen über die dann unterschiedliche GUI Driver angesteuert werden.\n\nIm Detail wird auf die Herausforderungen bei der Definition der Tests, Implementierung für die unterschiedlichen GUI und HMI Technologien und zentralen Verwaltung und Verwertung der Test-Resultate eingegangen.\n\nAbgerundet wird der Vortrag durch eine Demo die das Besprochene in der Praxis vorgeführt.",
      "demo": true,
      "trackId": "2",
      "audienceId": "2",
      "speakerIds": [],
      "languageId": "en"
    },
    {
      "id": "497189",
      "start": "2016-07-07T11:10:00",
      "end": "2016-07-07T11:55:00",
      "title": "[F3] Ein Prozess lernt laufen, LEGO Mindstorms Steuerung mit BPMN",
      "abstractText": "Betriebliche Abläufe gehören zum Geschäftsalltag wie LEGO zur Kindheit. Dennoch mangelt es in vielen Unternehmen an der Transparenz und Wiederverwendbarkeit dieser Abläufe. Mit der ¿Business Process Modeling Notation¿ (BPMN) lässt sich dieses Manko beseitigen und Fachabteilungen und Technik wachsen zusammen. Zusätzlich wird die Geschäftswelt ortsübergreifend visualisiert. Als Ergebnis entstehen Diagramme, die als Dokumentation für das Business dienen und Automationsgrundlage der IT sind.\n\nIm Gegensatz hierzu steht das praktische Lernen mit LEGO-Mindstorms. Ein kleiner Roboter wird in mannigfaltigen Ausprägungen zusammengebaut, mit einer Java-API gefüttert und über externe Software gesteuert. Seriell und parallel geschaltete Einzelschritte erwecken unseren beweglichen Freund zum Leben.\n\nIn diesem Vortrag wird der Bogen zwischen Prozessen und Robotern gespannt. Bewegungsabläufe werden mit BPMN2 definiert und mittels einer ¿Business Process Engine¿ automatisiert. Es wird die Herangehensweise der Modellierung inklusive BPMN-Basics, Strukturierung von Prozessen sowie Motorik und Sensorik behandelt und während einer Live-Demo veranschaulicht.\n\nAlles in allem ein Thema, welches Programmierer und Tüftler, Profis und Unerfahrene sowie Erwachsene und Kinder gleichermaßen zu begeistern vermag.",
      "demo": true,
      "trackId": "4",
      "audienceId": "1",
      "speakerIds": [],
      "languageId": "en"
    }
  ],
  "speakers": []
}